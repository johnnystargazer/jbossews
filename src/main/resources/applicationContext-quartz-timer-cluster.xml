<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
						http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd 	http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd"
	default-lazy-init="false">

	<description>Quartz Config</description>


	<bean id="quartzDataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${quartz.jdbc.driver}" />
		<property name="url" value="${quartz.jdbc.url}" />
		<property name="username" value="${quartz.jdbc.username}" />
		<property name="password" value="${quartz.jdbc.password}" />
	</bean>
	 
	 
	 
	<jdbc:initialize-database enabled="${quartz.jdbc.enabled}" data-source="quartzDataSource"  >
		<jdbc:script location="classpath:sql/mysql/quartz.sql"  />
	</jdbc:initialize-database>


	<!-- <bean id="quartzTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
		<property name="dataSource" ref="quartzDataSource" /> </bean> -->




	<bean id="clusterQuartzScheduler"
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="timerTrigger" />
			</list>
		</property>
		<property name="configLocation" value="classpath:quartz-cluster.properties" />
		<property name="startupDelay" value="2" />
		<property name="dataSource" ref="quartzDataSource" />
		<property name="applicationContextSchedulerContextKey" value="applicationContext" />
	</bean>

	<!-- Timer式 Trigger定义 -->
	<bean id="timerTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="timerJobDetail" />
		<!-- 每次执行间隔5分钟 -->
		<property name="repeatInterval" value="300000" />
	</bean>

	<!-- JobDetail, 基于JobDetailBean实例化Job Class,可持久化到数据库实现集群 -->
	<bean id="timerJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="durability" value="true" />
		<property name="jobClass" value="com.johnny.boot.openshift.QuartzClusterableJob" />
	</bean>


	<util:map id="timerJobConfig">
		<entry key="nodeName" value="default" />
	</util:map>
</beans>
